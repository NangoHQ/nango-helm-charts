apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.shared.namespace }}
  name: {{ .Values.orchestrator.name | default "nango-orchestrator" }}
spec:
  replicas: {{ .Values.orchestrator.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.orchestrator.name | default "nango-orchestrator" }}
  template:
    metadata:
      labels:
        app: {{ .Values.orchestrator.name | default "nango-orchestrator" }}
    spec:
      containers:
        - name: {{ .Values.orchestrator.name | default "nango-orchestrator" }}
          image: nangohq/nango:prod-{{ .Values.orchestrator.tag | default .Values.shared.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy | default "Always" }}
          args: ["node", "packages/orchestrator/dist/app.js"]
          env:
            - name: NANGO_DB_HOST
              value: {{ .Values.shared.DB_HOST }}
            - name: NANGO_DB_NAME
              value: {{ .Values.shared.DB_NAME }}
            - name: NANGO_DB_USER
              value: {{ .Values.shared.DB_USER }}
              {{- if .Values.shared.DB_URL }}
              name: NANGO_DATABASE_URL
              value: {{ .Values.shared.DB_URL }}
              {{- end }}
            - name: NANGO_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.postgresql.enabled }}nango-postgresql{{ else }}nango-secrets{{ end }}
                  key: postgres-password
            - name: NANGO_DB_PORT
              value: "{{ .Values.shared.DB_PORT | default 5432 }}"
            - name: NANGO_DB_SSL
              value: "{{ .Values.shared.DB_SSL | default false }}"
              {{- if .Values.shared.encryptionEnabled }}
            - name: NANGO_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: nango-secrets
                  key: encryption-key
              {{ end }}
            - name: NANGO_ENTERPRISE
              value: "true"
